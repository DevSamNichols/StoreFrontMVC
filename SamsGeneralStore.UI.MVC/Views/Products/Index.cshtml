@model IEnumerable<SamsGeneralStore.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "Shop Products";
}

<section class="product_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Shop <span>Products</span>
            </h2>

            <p align="center">
                @*@if (User.IsInRole("Admin"))*@
                @*{*@                   
                    <span>
                        <a asp-action="Create">Add New Product</a>                        
                    </span>
                @*}*@
                <a asp-action="TiledProducts">Tile View</a>
            </p>

        </div>

        @*
            DataTables requires a table with a thead and tbody, as well as a
            class or id attribute to be used for selecting the table via jQuery. 
            The original, scaffolded table from EF has everything we need.
        *@


        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    @*            <th>
                        @Html.DisplayNameFor(model => model.ProductDescription)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.UnitsInStock)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.UnitsOnOrder)
                        </th>
                        <th>
                        @Html.DisplayNameFor(model => model.IsDiscontinued)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.ProductImage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Manufacturer)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        @*            <td>
                            @Html.DisplayFor(modelItem => item.ProductDescription)
                            </td>
                            <td>
                            @Html.DisplayFor(modelItem => item.UnitsInStock)
                            </td>
                            <td>
                            @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                            </td>
                            <td>
                            @Html.DisplayFor(modelItem => item.IsDiscontinued)
                            </td>*@
                        <td>
                            @*@Html.DisplayFor(modelItem => item.ProductImage)*@
                            <img src="~/images/@item.ProductImage" class="img-fluid" alt="@item.Description" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductType.ProductTypeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Manufacturer.ManufacturerName)
                        </td>
                        <td>
                            @*@if (User.IsInRole("Admin"))*@
                            @*{*@
                                <span>
                                    <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                                </span>
                            @*}*@
                            <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> 

                            @*
                                Conditional Delete Availability
                                - ONLY allow users to click on the delete button if the product is
                                not directly related to any order records.
                                - We'll check the Count() of related records for the product --> if the count is 0, allow delete.
                                Otherwise, disable the delete button
                            *@
                            @*@if (User.IsInRole("Admin"))
                            {*@
                                @if (item.OrderProducts.Count() == 0)//item.OrderProducts retrieves any related records for the Product
                                {
                                    <span>|</span>
                                    <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                                }
                                else
                                {
                                    <span>|</span>
                                    <a disabled="disabled" class="text-danger text-decoration-line-through"
                                    title="Cannot delete this Product as it is referenced by an Order">
                                        Delete
                                    </a>
                                }
                            @*}*@

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</section>

@* To implement DataTables on this page, we added a section for scripts, then
   called the plugin's function. We pulled this plugin function from https://datatables.net
*@

@section Scripts {
    <script>

        $(document).ready( function () {

            //Update the selector to target the element with the table class
            $('.table').DataTable();

        } );

    </script>
}

@*Below is the default products index view*@
@*<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductsSold)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductsSold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer.ManufacturerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType.ProductTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockStatus.StockStatusName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
